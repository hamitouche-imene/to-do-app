<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/style.css">
    <title>Document</title>
</head>
 <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f4f4f9;
            color: #333;
            display: flex;
            flex-direction: column;
            align-items: center;
        }
        h1 {
            margin: 20px 0;
        }
        .todo-container {
            width: 90%;
            max-width: 600px;
            background: #fff;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
            padding: 20px;
            border-radius: 8px;
        }
        .task-list {
            list-style-type: none;
            padding: 0;
            margin: 0;
        }
        .task-list li {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin: 10px 0;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            background: #fafafa;
        }
        .task-list li.completed {
            text-decoration: line-through;
            background: #d4edda;
            color: #155724;
        }
        .task-input-container {
            display: flex;
            margin-top: 15px;
        }
        .task-input {
            flex-grow: 1;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
        .add-task-btn {
            padding: 10px;
            background-color: #28a745;
            color: white;
            border: none;
            border-radius: 4px;
            margin-left: 5px;
            cursor: pointer;
        }
        .add-task-btn:hover {
            background-color: #218838;
        }
        .delete-btn {
            background-color: #dc3545;
            color: white;
            border: none;
            padding: 5px 10px;
            border-radius: 4px;
            cursor: pointer;
        }
        .delete-btn:hover {
            background-color: #c82333;
        }
    </style>
<body>
    <nav>
        <h4>node my sql</h4>
        <ul>
            <li><a href="/">home</a></li>
            
            <li><a href="/register">register</a></li>
             
        </ul>
    </nav>
    <div class="container">
        <div class="jum">
            <h1>learn more </h1>
        </div>
    </div>
    
{{#if user}}
    <h1>Welcome, {{user.name}}!</h1>
    <a href="/auth/logout">Logout</a>
{{else}}
    <a href="/login">Login</a>
{{/if}}

 <h1>To-Do List</h1>
    <div class="todo-container">
        <ul class="task-list" id="taskList">
            <!-- Example Tasks -->
            <!-- Task items will be dynamically generated here -->
        </ul>
        <div class="task-input-container">
            <input type="text" id="taskInput" class="task-input" placeholder="Enter a new task">
            <button class="add-task-btn" id="addTaskBtn">Add</button>
        </div>
    </div>

    <script>
        // Task List JavaScript Logic
        const taskInput = document.getElementById('taskInput');
        const taskList = document.getElementById('taskList');
        const addTaskBtn = document.getElementById('addTaskBtn');

        // Add Task
        addTaskBtn.addEventListener('click', () => {
            const taskText = taskInput.value.trim();
            if (taskText === '') return;

            const taskItem = document.createElement('li');
            taskItem.innerHTML = `
                <span>${taskText}</span>
                <button class="delete-btn">Delete</button>
            `;

            // Mark task as completed
            taskItem.addEventListener('click', () => {
                taskItem.classList.toggle('completed');
            });

            // Delete task
            taskItem.querySelector('.delete-btn').addEventListener('click', (e) => {
                e.stopPropagation();
                taskList.removeChild(taskItem);
            });

            taskList.appendChild(taskItem);
            taskInput.value = ''; // Clear input field
        });

        // Optional: Load initial tasks from backend or local storage
    </script>
</body>
</html>